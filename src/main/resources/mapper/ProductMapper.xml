<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lcy.xxmall.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="cn.lcy.xxmall.pojo.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="productTypeId" jdbcType="INTEGER" property="producttypeid" />
    <result column="shopId" jdbcType="INTEGER" property="shopid" />
    <result column="uploadUserId" jdbcType="INTEGER" property="uploaduserid" />
    <result column="productName" jdbcType="VARCHAR" property="productname" />
    <result column="creatTime" jdbcType="TIMESTAMP" property="creattime" />
    <result column="productState" jdbcType="TINYINT" property="productstate" />
    <result column="originalPrive" jdbcType="DECIMAL" property="originalprive" />
    <result column="discountPrive" jdbcType="DECIMAL" property="discountprive" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="describing" jdbcType="VARCHAR" property="describing" />
    <result column="mainImageUrl" jdbcType="VARCHAR" property="mainimageurl" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.lcy.xxmall.pojo.Product">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, productTypeId, shopId, uploadUserId, productName, creatTime, productState, originalPrive, 
    discountPrive, stock, describing, mainImageUrl
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.lcy.xxmall.pojo.ProductExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.lcy.xxmall.pojo.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lcy.xxmall.pojo.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lcy.xxmall.pojo.Product">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product (productTypeId, shopId, uploadUserId, 
      productName, creatTime, productState, 
      originalPrive, discountPrive, stock, 
      describing, mainImageUrl, content
      )
    values (#{producttypeid,jdbcType=INTEGER}, #{shopid,jdbcType=INTEGER}, #{uploaduserid,jdbcType=INTEGER}, 
      #{productname,jdbcType=VARCHAR}, #{creattime,jdbcType=TIMESTAMP}, #{productstate,jdbcType=TINYINT}, 
      #{originalprive,jdbcType=DECIMAL}, #{discountprive,jdbcType=DECIMAL}, #{stock,jdbcType=INTEGER}, 
      #{describing,jdbcType=VARCHAR}, #{mainimageurl,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.lcy.xxmall.pojo.Product">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="producttypeid != null">
        productTypeId,
      </if>
      <if test="shopid != null">
        shopId,
      </if>
      <if test="uploaduserid != null">
        uploadUserId,
      </if>
      <if test="productname != null">
        productName,
      </if>
      <if test="creattime != null">
        creatTime,
      </if>
      <if test="productstate != null">
        productState,
      </if>
      <if test="originalprive != null">
        originalPrive,
      </if>
      <if test="discountprive != null">
        discountPrive,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="describing != null">
        describing,
      </if>
      <if test="mainimageurl != null">
        mainImageUrl,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="producttypeid != null">
        #{producttypeid,jdbcType=INTEGER},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="uploaduserid != null">
        #{uploaduserid,jdbcType=INTEGER},
      </if>
      <if test="productname != null">
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null">
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="productstate != null">
        #{productstate,jdbcType=TINYINT},
      </if>
      <if test="originalprive != null">
        #{originalprive,jdbcType=DECIMAL},
      </if>
      <if test="discountprive != null">
        #{discountprive,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="describing != null">
        #{describing,jdbcType=VARCHAR},
      </if>
      <if test="mainimageurl != null">
        #{mainimageurl,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lcy.xxmall.pojo.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.producttypeid != null">
        productTypeId = #{record.producttypeid,jdbcType=INTEGER},
      </if>
      <if test="record.shopid != null">
        shopId = #{record.shopid,jdbcType=INTEGER},
      </if>
      <if test="record.uploaduserid != null">
        uploadUserId = #{record.uploaduserid,jdbcType=INTEGER},
      </if>
      <if test="record.productname != null">
        productName = #{record.productname,jdbcType=VARCHAR},
      </if>
      <if test="record.creattime != null">
        creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.productstate != null">
        productState = #{record.productstate,jdbcType=TINYINT},
      </if>
      <if test="record.originalprive != null">
        originalPrive = #{record.originalprive,jdbcType=DECIMAL},
      </if>
      <if test="record.discountprive != null">
        discountPrive = #{record.discountprive,jdbcType=DECIMAL},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.describing != null">
        describing = #{record.describing,jdbcType=VARCHAR},
      </if>
      <if test="record.mainimageurl != null">
        mainImageUrl = #{record.mainimageurl,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product
    set id = #{record.id,jdbcType=INTEGER},
      productTypeId = #{record.producttypeid,jdbcType=INTEGER},
      shopId = #{record.shopid,jdbcType=INTEGER},
      uploadUserId = #{record.uploaduserid,jdbcType=INTEGER},
      productName = #{record.productname,jdbcType=VARCHAR},
      creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      productState = #{record.productstate,jdbcType=TINYINT},
      originalPrive = #{record.originalprive,jdbcType=DECIMAL},
      discountPrive = #{record.discountprive,jdbcType=DECIMAL},
      stock = #{record.stock,jdbcType=INTEGER},
      describing = #{record.describing,jdbcType=VARCHAR},
      mainImageUrl = #{record.mainimageurl,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set id = #{record.id,jdbcType=INTEGER},
      productTypeId = #{record.producttypeid,jdbcType=INTEGER},
      shopId = #{record.shopid,jdbcType=INTEGER},
      uploadUserId = #{record.uploaduserid,jdbcType=INTEGER},
      productName = #{record.productname,jdbcType=VARCHAR},
      creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      productState = #{record.productstate,jdbcType=TINYINT},
      originalPrive = #{record.originalprive,jdbcType=DECIMAL},
      discountPrive = #{record.discountprive,jdbcType=DECIMAL},
      stock = #{record.stock,jdbcType=INTEGER},
      describing = #{record.describing,jdbcType=VARCHAR},
      mainImageUrl = #{record.mainimageurl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lcy.xxmall.pojo.Product">
    update product
    <set>
      <if test="producttypeid != null">
        productTypeId = #{producttypeid,jdbcType=INTEGER},
      </if>
      <if test="shopid != null">
        shopId = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="uploaduserid != null">
        uploadUserId = #{uploaduserid,jdbcType=INTEGER},
      </if>
      <if test="productname != null">
        productName = #{productname,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null">
        creatTime = #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="productstate != null">
        productState = #{productstate,jdbcType=TINYINT},
      </if>
      <if test="originalprive != null">
        originalPrive = #{originalprive,jdbcType=DECIMAL},
      </if>
      <if test="discountprive != null">
        discountPrive = #{discountprive,jdbcType=DECIMAL},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="describing != null">
        describing = #{describing,jdbcType=VARCHAR},
      </if>
      <if test="mainimageurl != null">
        mainImageUrl = #{mainimageurl,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.lcy.xxmall.pojo.Product">
    update product
    set productTypeId = #{producttypeid,jdbcType=INTEGER},
      shopId = #{shopid,jdbcType=INTEGER},
      uploadUserId = #{uploaduserid,jdbcType=INTEGER},
      productName = #{productname,jdbcType=VARCHAR},
      creatTime = #{creattime,jdbcType=TIMESTAMP},
      productState = #{productstate,jdbcType=TINYINT},
      originalPrive = #{originalprive,jdbcType=DECIMAL},
      discountPrive = #{discountprive,jdbcType=DECIMAL},
      stock = #{stock,jdbcType=INTEGER},
      describing = #{describing,jdbcType=VARCHAR},
      mainImageUrl = #{mainimageurl,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lcy.xxmall.pojo.Product">
    update product
    set productTypeId = #{producttypeid,jdbcType=INTEGER},
      shopId = #{shopid,jdbcType=INTEGER},
      uploadUserId = #{uploaduserid,jdbcType=INTEGER},
      productName = #{productname,jdbcType=VARCHAR},
      creatTime = #{creattime,jdbcType=TIMESTAMP},
      productState = #{productstate,jdbcType=TINYINT},
      originalPrive = #{originalprive,jdbcType=DECIMAL},
      discountPrive = #{discountprive,jdbcType=DECIMAL},
      stock = #{stock,jdbcType=INTEGER},
      describing = #{describing,jdbcType=VARCHAR},
      mainImageUrl = #{mainimageurl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>