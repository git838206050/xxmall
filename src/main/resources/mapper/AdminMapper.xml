<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lcy.xxmall.dao.AdminMapper">
  <resultMap id="BaseResultMap" type="cn.lcy.xxmall.pojo.Admin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="adminName" jdbcType="VARCHAR" property="adminname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="creatTime" jdbcType="TIMESTAMP" property="creattime" />
    <result column="lastTime" jdbcType="TIMESTAMP" property="lasttime" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="headerUrl" jdbcType="VARCHAR" property="headerurl" />
    <result column="prohibitLoginTime" jdbcType="TIMESTAMP" property="prohibitlogintime" />
    <result column="recovery" jdbcType="TINYINT" property="recovery" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, adminName, password, nickname, creatTime, lastTime, email, headerUrl, prohibitLoginTime, 
    recovery
  </sql>
  <select id="selectByExample" parameterType="cn.lcy.xxmall.pojo.AdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lcy.xxmall.pojo.AdminExample">
    delete from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lcy.xxmall.pojo.Admin">
    insert into admin (id, adminName, password, 
      nickname, creatTime, lastTime, 
      email, headerUrl, prohibitLoginTime, 
      recovery)
    values (#{id,jdbcType=INTEGER}, #{adminname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{creattime,jdbcType=TIMESTAMP}, #{lasttime,jdbcType=TIMESTAMP}, 
      #{email,jdbcType=VARCHAR}, #{headerurl,jdbcType=VARCHAR}, #{prohibitlogintime,jdbcType=TIMESTAMP}, 
      #{recovery,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.lcy.xxmall.pojo.Admin">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="adminname != null">
        adminName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="creattime != null">
        creatTime,
      </if>
      <if test="lasttime != null">
        lastTime,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="headerurl != null">
        headerUrl,
      </if>
      <if test="prohibitlogintime != null">
        prohibitLoginTime,
      </if>
      <if test="recovery != null">
        recovery,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="adminname != null">
        #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null">
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="lasttime != null">
        #{lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="headerurl != null">
        #{headerurl,jdbcType=VARCHAR},
      </if>
      <if test="prohibitlogintime != null">
        #{prohibitlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="recovery != null">
        #{recovery,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lcy.xxmall.pojo.AdminExample" resultType="java.lang.Long">
    select count(*) from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.adminname != null">
        adminName = #{record.adminname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.creattime != null">
        creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lasttime != null">
        lastTime = #{record.lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.headerurl != null">
        headerUrl = #{record.headerurl,jdbcType=VARCHAR},
      </if>
      <if test="record.prohibitlogintime != null">
        prohibitLoginTime = #{record.prohibitlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recovery != null">
        recovery = #{record.recovery,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin
    set id = #{record.id,jdbcType=INTEGER},
      adminName = #{record.adminname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      lastTime = #{record.lasttime,jdbcType=TIMESTAMP},
      email = #{record.email,jdbcType=VARCHAR},
      headerUrl = #{record.headerurl,jdbcType=VARCHAR},
      prohibitLoginTime = #{record.prohibitlogintime,jdbcType=TIMESTAMP},
      recovery = #{record.recovery,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lcy.xxmall.pojo.Admin">
    update admin
    <set>
      <if test="adminname != null">
        adminName = #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null">
        creatTime = #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="lasttime != null">
        lastTime = #{lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="headerurl != null">
        headerUrl = #{headerurl,jdbcType=VARCHAR},
      </if>
      <if test="prohibitlogintime != null">
        prohibitLoginTime = #{prohibitlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="recovery != null">
        recovery = #{recovery,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lcy.xxmall.pojo.Admin">
    update admin
    set adminName = #{adminname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      creatTime = #{creattime,jdbcType=TIMESTAMP},
      lastTime = #{lasttime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      headerUrl = #{headerurl,jdbcType=VARCHAR},
      prohibitLoginTime = #{prohibitlogintime,jdbcType=TIMESTAMP},
      recovery = #{recovery,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>