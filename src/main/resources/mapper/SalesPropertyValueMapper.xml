<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lcy.xxmall.dao.SalesPropertyValueMapper">
  <resultMap id="BaseResultMap" type="cn.lcy.xxmall.pojo.SalesPropertyValue">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="productId" jdbcType="INTEGER" property="productid" />
    <result column="propertyKeyId" jdbcType="INTEGER" property="propertykeyid" />
    <result column="propertyValue" jdbcType="VARCHAR" property="propertyvalue" />
    <result column="showType" jdbcType="TINYINT" property="showtype" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, productId, propertyKeyId, propertyValue, showType
  </sql>
  <select id="selectByExample" parameterType="cn.lcy.xxmall.pojo.SalesPropertyValueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sales_property_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sales_property_value
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sales_property_value
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lcy.xxmall.pojo.SalesPropertyValueExample">
    delete from sales_property_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lcy.xxmall.pojo.SalesPropertyValue">
    insert into sales_property_value (id, productId, propertyKeyId, 
      propertyValue, showType)
    values (#{id,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER}, #{propertykeyid,jdbcType=INTEGER}, 
      #{propertyvalue,jdbcType=VARCHAR}, #{showtype,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.lcy.xxmall.pojo.SalesPropertyValue">
    insert into sales_property_value
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productid != null">
        productId,
      </if>
      <if test="propertykeyid != null">
        propertyKeyId,
      </if>
      <if test="propertyvalue != null">
        propertyValue,
      </if>
      <if test="showtype != null">
        showType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="propertykeyid != null">
        #{propertykeyid,jdbcType=INTEGER},
      </if>
      <if test="propertyvalue != null">
        #{propertyvalue,jdbcType=VARCHAR},
      </if>
      <if test="showtype != null">
        #{showtype,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lcy.xxmall.pojo.SalesPropertyValueExample" resultType="java.lang.Long">
    select count(*) from sales_property_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sales_property_value
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.productid != null">
        productId = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.propertykeyid != null">
        propertyKeyId = #{record.propertykeyid,jdbcType=INTEGER},
      </if>
      <if test="record.propertyvalue != null">
        propertyValue = #{record.propertyvalue,jdbcType=VARCHAR},
      </if>
      <if test="record.showtype != null">
        showType = #{record.showtype,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sales_property_value
    set id = #{record.id,jdbcType=INTEGER},
      productId = #{record.productid,jdbcType=INTEGER},
      propertyKeyId = #{record.propertykeyid,jdbcType=INTEGER},
      propertyValue = #{record.propertyvalue,jdbcType=VARCHAR},
      showType = #{record.showtype,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lcy.xxmall.pojo.SalesPropertyValue">
    update sales_property_value
    <set>
      <if test="productid != null">
        productId = #{productid,jdbcType=INTEGER},
      </if>
      <if test="propertykeyid != null">
        propertyKeyId = #{propertykeyid,jdbcType=INTEGER},
      </if>
      <if test="propertyvalue != null">
        propertyValue = #{propertyvalue,jdbcType=VARCHAR},
      </if>
      <if test="showtype != null">
        showType = #{showtype,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lcy.xxmall.pojo.SalesPropertyValue">
    update sales_property_value
    set productId = #{productid,jdbcType=INTEGER},
      propertyKeyId = #{propertykeyid,jdbcType=INTEGER},
      propertyValue = #{propertyvalue,jdbcType=VARCHAR},
      showType = #{showtype,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>